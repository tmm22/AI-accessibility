name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - '**.swift'
      - '**.md'
      - 'Documentation.docc/**'
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Update Version Info
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            DATE=$(date +%Y-%m-%d)
            
            # Update versions.json
            jq --arg ver "$VERSION" --arg date "$DATE" \
              '.versions = ([{"version": $ver, "title": "VoiceAssist " + $ver, "date": $date, "status": "current"}] + (.versions | map(if .status == "current" then . + {"status": "archived"} else . end)))' \
              Documentation.docc/versions.json > temp.json && mv temp.json Documentation.docc/versions.json
            
            # Update current version
            jq --arg ver "$VERSION" '.current = $ver' \
              Documentation.docc/versions.json > temp.json && mv temp.json Documentation.docc/versions.json
          fi
          
      - name: Build Documentation
        run: |
          # Build current version
          xcodebuild docbuild \
            -scheme VoiceAssistApp \
            -destination 'platform=macOS' \
            -derivedDataPath ./derived_data
          
          # Copy to versioned directory
          VERSION=$(jq -r '.current' Documentation.docc/versions.json)
          mkdir -p ./docs/$VERSION
          cp -r ./derived_data/Build/Products/Debug/VoiceAssist.doccarchive/* ./docs/$VERSION/
          
          # Build version selector
          cat Documentation.docc/versions.json | jq -r '.versions[] | "<option value=\"/\(.version)/\">\(.title) (\(.date))</option>"' > ./docs/versions.html
          
      - name: Generate Version Archives
        run: |
          # Get all version tags
          git tag -l 'v*' | while read -r tag; do
            VERSION=${tag#v}
            
            # Skip if already built
            if [ -d "./docs/$VERSION" ]; then
              continue
            fi
            
            # Checkout version
            git checkout $tag
            
            # Build docs for version
            xcodebuild docbuild \
              -scheme VoiceAssistApp \
              -destination 'platform=macOS' \
              -derivedDataPath ./derived_data_$VERSION
            
            # Copy to versioned directory
            mkdir -p ./docs/$VERSION
            cp -r ./derived_data_$VERSION/Build/Products/Debug/VoiceAssist.doccarchive/* ./docs/$VERSION/
          done
          
          # Return to original branch
          git checkout ${GITHUB_REF#refs/heads/}
            
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  generate-changelog:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Generate Documentation Changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          
          echo "# Documentation Changes for Version $VERSION" > docs_changelog.md
          echo "## Changes Since Last Release" >> docs_changelog.md
          
          # Get the previous version tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          
          # Generate changelog
          git log --no-merges "$PREV_TAG..$GITHUB_REF" Documentation.docc/ | \
            grep -E "^\+.*" >> docs_changelog.md
          
      - name: Create Release Notes
        uses: softprops/action-gh-release@v1
        with:
          files: docs_changelog.md
          body_path: docs_changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
